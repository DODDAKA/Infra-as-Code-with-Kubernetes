trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: TerraformDeploy
  displayName: 'Terraform Deployment'
  jobs:
  - job: RunTerraform
    displayName: 'Execute Terraform'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: 'Terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendAzureRmUseEnvironmentVariablesForAuthentication: false
        backendAzureRmUseEntraIdForAuthentication: false
        backendServiceArm: 'Mfjkbsh - 6/3/25(3ce0a1fd-a1bb-46f5-vfcb-74b712009503)'
        backendAzureRmResourceGroupName: 'rg-st'
        backendAzureRmStorageAccountName: 'stdnk200nk2000'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
    
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'validate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'Mgkmsh - 6/3/25(3ce0a1fd-adbb-46f5-abcb-74b712009503)'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(Build.BuildId)-buildart'
        publishLocation: 'Container'
